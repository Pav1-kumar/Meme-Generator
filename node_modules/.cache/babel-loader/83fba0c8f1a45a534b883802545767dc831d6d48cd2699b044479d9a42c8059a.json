{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pavan\\\\OneDrive\\\\Desktop\\\\Projects\\\\meme-generator\\\\meme-generator\\\\src\\\\Meme.js\",\n  _s = $RefreshSig$();\nimport memesData from \"./memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  const [memeImage, setMemeImage] = React.useState(\"\");\n  function getMemeImage() {\n    const memesArray = memesData.data.memes;\n    const randomNumber = Math.floor(Math.random() * memesArray.length);\n    setMemeImage(memesArray[randomNumber].url);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Top text\",\n      className: \"form--input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Bottom text\",\n      className: \"form--input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"form--button\",\n      onClick: getMemeImage,\n      children: \"Get a new meme image \\uD83D\\uDDBC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(Meme, \"WPEr3ahfD+dUnaJNuLUy9qTN31o=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["memesData","jsxDEV","_jsxDEV","Meme","_s","memeImage","setMemeImage","React","useState","getMemeImage","memesArray","data","memes","randomNumber","Math","floor","random","length","url","children","type","placeholder","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/pavan/OneDrive/Desktop/Projects/meme-generator/meme-generator/src/Meme.js"],"sourcesContent":["import memesData from \"./memesData\"\r\n\r\n\r\n\r\n\r\n\r\nexport default function Meme() {\r\n\r\n    const [memeImage, setMemeImage] = React.useState(\"\")\r\n\r\n\r\n\r\n    function getMemeImage() {\r\n        const memesArray = memesData.data.memes\r\n        const randomNumber = Math.floor(Math.random() * memesArray.length)\r\n        setMemeImage(memesArray[randomNumber].url)\r\n    }\r\n\r\n\r\n    return(\r\n        <main>\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Top text\"\r\n                className=\"form--input\"\r\n            />\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Bottom text\"\r\n                className=\"form--input\"\r\n            />\r\n            <button \r\n                className=\"form--button\"\r\n                onClick={getMemeImage}\r\n           >\r\n                Get a new meme image ðŸ–¼\r\n            </button>\r\n    </main>\r\n    )\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMnC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAE3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EAIpD,SAASC,YAAYA,CAAA,EAAG;IACpB,MAAMC,UAAU,GAAGV,SAAS,CAACW,IAAI,CAACC,KAAK;IACvC,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,UAAU,CAACO,MAAM,CAAC;IAClEX,YAAY,CAACI,UAAU,CAACG,YAAY,CAAC,CAACK,GAAG,CAAC;EAC9C;EAGA,oBACIhB,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MACIkB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,SAAS,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFxB,OAAA;MACIkB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,aAAa;MACzBC,SAAS,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFxB,OAAA;MACIoB,SAAS,EAAC,cAAc;MACxBK,OAAO,EAAElB,YAAa;MAAAU,QAAA,EAC1B;IAEA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEX;AAACtB,EAAA,CAjCuBD,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}